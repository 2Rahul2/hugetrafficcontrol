// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createuser = `-- name: Createuser :one
insert into users(id ,name ,created_at)
values($1 ,$2 ,$3)
RETURNING id, created_at, name
`

type CreateuserParams struct {
	ID        uuid.UUID
	Name      string
	CreatedAt time.Time
}

func (q *Queries) Createuser(ctx context.Context, arg CreateuserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createuser, arg.ID, arg.Name, arg.CreatedAt)
	var i User
	err := row.Scan(&i.ID, &i.CreatedAt, &i.Name)
	return i, err
}

const getUser = `-- name: GetUser :one
select id, created_at, name from users where id=$1
`

func (q *Queries) GetUser(ctx context.Context, id uuid.UUID) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(&i.ID, &i.CreatedAt, &i.Name)
	return i, err
}
